apiVersion: v1
kind: PersistentVolume
metadata:
  name: hadoop-config-pv
spec:
  storageClassName: hadoop-config-storage
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/hadoop-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: hadoop-config-pvc
spec:
  storageClassName: hadoop-config-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: namenode-pv
spec:
  storageClassName: hadoop-namenode-storage
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/hadoop-data
---
# pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: namenode-pvc
spec:
  storageClassName: hadoop-namenode-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Namenode Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namenode
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namenode
  template:
    metadata:
      labels:
        app: namenode
    spec:
      containers:
        - name: namenode
          image: apache/hadoop:3
          command: ["/bin/bash", "-c"]
          args:
            - |
              if [ ! -d "/tmp/hadoop-hadoop/dfs/name" ]; then
                echo "Directory does not exist. Running namenode format."
                echo "Y" | hdfs namenode -format
              else
                echo "Directory exists. Starting namenode."
              fi
              hdfs namenode &
              sleep 5
              hdfs datanode
          ports:
            - containerPort: 9870
            - containerPort: 8020
            - containerPort: 9000
            - containerPort: 9864
            - containerPort: 9867
            - containerPort: 14000
          volumeMounts:
            # - name: hdfs-name-volume
            #   mountPath: /tmp/hadoop-hadoop/dfs/data
            - name: hadoop-config-volume
              mountPath: /opt/hadoop/etc/hadoop
      volumes:
        - name: hdfs-name-volume
          persistentVolumeClaim:
            claimName: namenode-pvc
        - name: hadoop-config-volume
          persistentVolumeClaim:
            claimName: hadoop-config-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: namenode
spec:
  selector:
    app: namenode
  ports:
    - name: namenode-http
      protocol: TCP
      port: 9870
      targetPort: 9870
    - name: namenode-8020
      protocol: TCP
      port: 8020
      targetPort: 8020
    - name: namenode-rpc
      protocol: TCP
      port: 9000
      targetPort: 9000
    - name: datanode-http
      protocol: TCP
      port: 9864
      targetPort: 9864
    - name: datanode-ipc
      protocol: TCP
      port: 9867
      targetPort: 9867
    - name: web-hdfs
      protocol: TCP
      port: 14000
      targetPort: 14000
    - name: ssh
      protocol: TCP
      port: 22
      targetPort: 22
# ---
# # Datanode Deployment Template
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: datanodes
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       app: datanode
#   template:
#     metadata:
#       labels:
#         app: datanode
#     spec:
#       containers:
#         - name: datanode
#           image: apache/hadoop:3
#           command: ["hdfs", "datanode"]
#           volumeMounts:
#             - name: hadoop-config-volume
#               mountPath: /opt/hadoop/etc/hadoop
#       volumes:
#         - name: hadoop-config-volume
#           persistentVolumeClaim:
#             claimName: hadoop-config-pvc

# ---
# # Resourcemanager Deployment and Service
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: resourcemanager
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: resourcemanager
#   template:
#     metadata:
#       labels:
#         app: resourcemanager
#     spec:
#       containers:
#         - name: resourcemanager
#           image: apache/hadoop:3
#           command: ["yarn", "resourcemanager"]
#           envFrom:
#             - configMapRef:
#                 name: hadoop-config
#           ports:
#             - containerPort: 8088
#           volumeMounts:
#             - name: hadoop-config-volume
#               mountPath: /opt/hadoop/etc/hadoop
#       volumes:
#         - name: hadoop-config-volume
#           persistentVolumeClaim:
#             claimName: hadoop-config-pvc
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: resourcemanager
# spec:
#   # type: NodePort
#   selector:
#     app: resourcemanager
#   ports:
#     - name: web
#       port: 8088
#       targetPort: 8088
#       # nodePort: 30000

# ---
# # Nodemanager Deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nodemanager
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: nodemanager
#   template:
#     metadata:
#       labels:
#         app: nodemanager
#     spec:
#       containers:
#         - name: nodemanager
#           image: apache/hadoop:3
#           command: ["yarn", "nodemanager"]
#           volumeMounts:
#             - name: hadoop-config-volume
#               mountPath: /opt/hadoop/etc/hadoop
#       volumes:
#         - name: hadoop-config-volume
#           persistentVolumeClaim:
#             claimName: hadoop-config-pvc
