apiVersion: v1
kind: Namespace
metadata:
  name: hadoop

---
# Hadoop Config as ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: hadoop-config
  namespace: hadoop
data:
  core-site.xml: |
    <configuration>
      <property>
        <name>fs.default.name</name>
        <value>hdfs://namenode</value>
      </property>
      <property>
        <name>fs.defaultFS</name>
        <value>hdfs://namenode</value>
      </property>
    </configuration>
  hdfs-site.xml: |
    <configuration>
      <property>
        <name>dfs.namenode.rpc-address</name>
        <value>namenode:8020</value>
      </property>
      <property>
        <name>dfs.replication</name>
        <value>3</value>
      </property>
      <property>
        <name>dfs.permissions.enabled</name>
        <value>false</value>
      </property>
    </configuration>
  mapred-site.xml: |
    <configuration>
      <property>
        <name>mapreduce.framework.name</name>
        <value>yarn</value>
      </property>
      <property>
        <name>yarn.app.mapreduce.am.env</name>
        <value>HADOOP_MAPRED_HOME=$HADOOP_HOME</value>
      </property>
      <property>
        <name>mapreduce.map.env</name>
        <value>HADOOP_MAPRED_HOME=$HADOOP_HOME</value>
      </property>
      <property>
        <name>mapreduce.reduce.env</name>
        <value>HADOOP_MAPRED_HOME=$HADOOP_HOME</value>
      </property>
    </configuration>
  yarn-site.xml: |
    <configuration>
      <property>
        <name>yarn.resourcemanager.hostname</name>
        <value>resourcemanager</value>
      </property>
      <property>
        <name>yarn.nodemanager.pmem-check-enabled</name>
        <value>false</value>
      </property>
      <property>
        <name>yarn.nodemanager.delete.debug-delay-sec</name>
        <value>600</value>
      </property>
      <property>
        <name>yarn.nodemanager.vmem-check-enabled</name>
        <value>false</value>
      </property>
      <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
      </property>
    </configuration>
  capacity-scheduler.xml: |
    <configuration>
      <property>
        <name>yarn.scheduler.capacity.maximum-applications</name>
        <value>10000</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.maximum-am-resource-percent</name>
        <value>0.1</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.resource-calculator</name>
        <value>org.apache.hadoop.yarn.util.resource.DefaultResourceCalculator</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.root.queues</name>
        <value>default</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.root.default.capacity</name>
        <value>100</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.root.default.user-limit-factor</name>
        <value>1</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.root.default.maximum-capacity</name>
        <value>100</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.root.default.state</name>
        <value>RUNNING</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.root.default.acl_submit_applications</name>
        <value>*</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.root.default.acl_administer_queue</name>
        <value>*</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.node-locality-delay</name>
        <value>40</value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.queue-mappings</name>
        <value></value>
      </property>
      <property>
        <name>yarn.scheduler.capacity.queue-mappings-override.enable</name>
        <value>false</value>
      </property>
    </configuration>

---
# Hadoop Network (default in Kubernetes)
apiVersion: v1
kind: Service
metadata:
  name: hadoop-network
  namespace: hadoop
spec:
  clusterIP: None

---
# Namenode Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: namenode
  namespace: hadoop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: namenode
  template:
    metadata:
      labels:
        app: namenode
    spec:
      containers:
        - name: namenode
          image: apache/hadoop:3
          command: ["hdfs", "namenode"]
          envFrom:
            - configMapRef:
                name: hadoop-config
          ports:
            - containerPort: 9870
            - containerPort: 8020
---
apiVersion: v1
kind: Service
metadata:
  name: namenode
  namespace: hadoop
spec:
  selector:
    app: namenode
  ports:
    - name: web
      port: 9870
      targetPort: 9870
    - name: rpc
      port: 8020
      targetPort: 8020

---
# Datanode Deployment Template
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datanodes
  namespace: hadoop
spec:
  replicas: 3
  selector:
    matchLabels:
      app: datanode
  template:
    metadata:
      labels:
        app: datanode
    spec:
      containers:
        - name: datanode
          image: apache/hadoop:3
          command: ["hdfs", "datanode"]
          envFrom:
            - configMapRef:
                name: hadoop-config

---
# Resourcemanager Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: resourcemanager
  namespace: hadoop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resourcemanager
  template:
    metadata:
      labels:
        app: resourcemanager
    spec:
      containers:
        - name: resourcemanager
          image: apache/hadoop:3
          command: ["yarn", "resourcemanager"]
          envFrom:
            - configMapRef:
                name: hadoop-config
          ports:
            - containerPort: 8088
          volumeMounts:
            - name: script-volume
              mountPath: /opt
      volumes:
        - name: script-volume
          hostPath:
            path: ./test.sh
---
apiVersion: v1
kind: Service
metadata:
  name: resourcemanager
  namespace: hadoop
spec:
  selector:
    app: resourcemanager
  ports:
    - name: web
      port: 8088
      targetPort: 8088

---
# Nodemanager Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodemanager
  namespace: hadoop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodemanager
  template:
    metadata:
      labels:
        app: nodemanager
    spec:
      containers:
        - name: nodemanager
          image: apache/hadoop:3
          command: ["yarn", "nodemanager"]
          envFrom:
            - configMapRef:
                name: hadoop-config
